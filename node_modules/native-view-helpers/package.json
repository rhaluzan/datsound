{
  "name": "native-view-helpers",
  "description": "native view helpers for NodeJS",
  "version": "0.1.3",
  "homepage": "https://github.com/janez89/native-view-helpers",
  "repository": {
    "type": "git",
    "url": "git://github.com/janez89/native-view-helpers.git"
  },
  "main": "index.js",
  "engine": "node >= 0.6.0",
  "bin": {},
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "optionalDependencies": {},
  "dependencies": {
    "mpath": ""
  },
  "devDependencies": {
    "mocha": "~1.12.0"
  },
  "keywords": [
    "view",
    "helper",
    "template",
    "native"
  ],
  "author": {
    "name": "janez89",
    "email": "m.janee@gmail.com",
    "url": "https://github.com/janez89/"
  },
  "contributors": [],
  "license": "MIT",
  "readme": "# Native view helpers for NodeJS\n\n[![Build Status](https://travis-ci.org/janez89/native-view-helpers.png?branch=master)](https://travis-ci.org/janez89/native-view-helpers)\n[![NPM version](https://badge.fury.io/js/native-view-helpers.png)](http://badge.fury.io/js/native-view-helpers)\n\nA collection of helper for NodeJS templates.\n\n`npm install native-view-helpers`\n\n## Overview\n\n* [Usage](#usage)\n* [Helpers API](#helpers-api)\n\t* [Summary](#summary)\n\t* [Basic](#basic)\n\t\t* [e](#e---escape)\n\t\t* [url](#url)\n\t\t* [numberFormat](#numberformat)\n\t\t* [mergeObject](#mergeobject)\n\t\t* [toAttr](#toattr)\n\t\t* [repeat](#repeat)\n\t\t* [nl2br](#nl2br)\n\t\t* [htmlspecialchars](#htmlspecialchars)\n\t\t* [strip_tags](#strip_tags)\n\t\t* [ucFirst](#ucfirst)\n\t\t* [countChars](#countchars)\n\t* [HTML](#html)\n\t\t* [a](#a)\n\t\t* [el](#el)\n\t\t* [beginEl](#beginel)\n\t\t* [endEl](#endel)\n\t\t* [charset](#charset)\n\t\t* [css](#css)\n\t\t* [script](#script)\n\t\t* [img](#img)\n\t\t* [imgText](#imgtext)\n\t\t* [refresh](#refresh)\n\t* [Date](#date)\n\t\t* [time](#time)\n\t\t* [format](#format)\n\t\t* [parse](#parse)\n\t* [Form](#form)\n\t\t* [begin](#begin)\n\t\t* [end](#end)\n\t\t* [label](#label)\n\t\t* [inputField](#inputfield)\n\t\t* [hiddenField](#hiddenfield)\n\t\t* [textField](#textfield)\n\t\t* [passwordField](#passwordfield)\n\t\t* [fileField](#filefield)\n\t\t* [textArea](#textarea)\n\t\t* [dropDownList](#dropdownlist)\n\t\t* [checkBox](#checkbox)\n\t\t* [radioButton](#radiobutton)\r\n\t\t* [radioButtonList](#radiobuttonlist)\n\t\t* [button](#button)\n\t\t* [resetButton](#resetbutton)\n\t\t* [submitButton](#submitbutton)\n\t* [ActiveForm - unstable!](#activeform)\n\t\t* [Active Form Usage](#active-form-usage)\n\t\t* [data](#data)\n\t* [Widgets](#widgets)\n\t\t* [pagination](#pagination)\n\t\t* [nestedList](#nestedList)\n\t\t* [shippingChooser](#shippingChooser)\n* [Changelog](#changelog)\n* [Authors and contributors](#authors-and-contributors)\n* [License](#license)\n\n<a name=\"usage\"></a>\n## Usage\n\nNode native helpers use with express\n```javascript\n// for static helpers\napp.locals.$ = require('native-view-helpers');\n\n// or inside and in examples\nvar helper = require('native-view-helpers');\n```\n\nUse in templates\n\nEJS templates:\n\n```\n<%- $.nl2br('\\r\\n') %> // out: <br />\n<%- $.ucFirst('message') %> // out: Message\n<%- $.date.format('Y/m/d H:i:s') %>\n<%- $.html.a('/url-address', 'Label') %>\n<%- $.html.charset() %>\n\n> Use form\n\n<%- $.form.begin('/target') %>\n\n<%- $.form.label('Username') %>\n<%- $.form.textField('username') %>\n\n<%- $.form.label('Password') %>\n<%- $.form.passwordField('password') %>\n\n<%- $.form.submitButton('Login') %>\n\n<%- $.form.end() %>\n\n> Or active form\n\n<% var form = $.activeForm('/target') %>\n<%- form.begin() %>\n\n<%- form.label('username') %>\n<%- form.textField('username', { placeholder: 'Username'}) %>\n\n<%- form.label('Password') %>\n<%- form.passwordField('password', { placeholder: 'Password'}) %>\n\n<%- form.submitButton('Login') %>\n<%- form.end() %>\n\n> Use dropDownList\n\n<%- $.form.dropDownList('category', null, ['Category 1', 'Category 2', 'Category 3'], { empty: '-- Select --'}) %>\n<%- $.form.dropDownList('category', 'val3', { val1: 'Category 1', val2: 'Category 2', val3: 'Category 3'}) %>\n<%- $.form.dropDownList('category', 12, [{ id: 10, name: 'Category 1'}, { id: 12, name: 'Category 2'}], { value: 'id', label: 'name'}) %>\r\n\r\n> Use radio button list\n\n// in javascript\nvar radioButtonList = {\n\t\"value1\": \"Label 1\",\n\t\"value2\": \"Label 2\",\n\t\"value3\": \"Label 3\" \n};\n\n<%- $.form.radioButtonList('name', 'value1', radioButtonList) %>\r\n\r\n> radio button list with custom template\r\n\r\n<%- $.form.radioButtonList('name', 'value1', radioButtonList, { template: '{input} &lt;span&gt;{label}&lt;/span&gt;' }) %>\n\n> Use pagination\n\n<%- $.widgets.pagination({page: 1, pages: 12 }) %>\n<%- $.widgets.pagination({page: 1, count: 120, limit: 10 }) %>\n<%- $.widgets.pagination({page: 1, pages: 12, url: '/index?sort=name' }) %> out: /index?sort=name&page=[num]\n<%- $.widgets.pagination({page: 1, pages: 12, url: '/index?sort=name', query: 'p' }) %> out: /index?sort=name&p=[num]\n\n> Building tree\n\nvar list = [\n\t{ \n\t\tid: 1, \n\t\tname: 'Main Category', \n\t\tchildren: [ \n\t\t\t{ id: 2, name: 'Sub Category 1' }, \n\t\t\t{ id: 2, name: 'Sub Category 1'\t} \n\t\t]\n\t}\n];\n\n<%- $.widgets.nestedList(list, function (fn, el, lvl) { return fn.html.a('/info/'+ el.id, el.name); }) %>\n\n```\n\n[Go to contents](#overview)\n\n***\n\n## Helpers API\n\n### Basic\n\n#### e - escape\n\n> escape string <br>\r\n> e(string)\n\n```javascript\nhelper.e('escape this content');\n```\n\n#### url\n\n> url helper <br>\r\n> url(url\\_string)\n\n```javascript\nvar url = helper.url('http://example.com/?show=name');\nurl.setQs('name', 'value'); // set Query string name=value\nurl.getUrl(); // return http://example.com/?shown=name&name=value\n\n// alternative linked solution\nhelper.url('http://ex.com/?page=5').setQs('page',10).getUrl();\n\n```\n\n#### numberFormat\n\n> PHP number format method <br>\r\n> numberFormat(number, options) <br>\r\n> number_fromat(number, decimals, dec_point, thousands_sep) <br>\n\n```javascript\nhelper.numberFormat(10000.11111, { sep: ',', decimals: 2});\n// return 10,000.11\n\n// PHP style - snake case version\nhelper.number_format(10000.1111, 2, '.', ',');\n// return 10,000.11\n```\n\n> numberFormat(number, options)\n\nOptions:\n\n* sep: thousands separator\r\n* decpoint: decimal separator\r\n* decimals: number of decimals\r\n\r\n> number_format(number, decimals, dec_point, thousands_sep)\r\n\r\n#### mergeObject\r\n\r\n> Merge to JSON object <br>\r\n> mergeObject(toObject, fromObject) \r\n\r\n```javascript\r\nvar obj1 = { name: 'Name' };\r\nvar obj2 = { age: 25 };\r\nobj1 = helper.mergeObject(obj1, obj2);\r\n// obj1 return: { name: 'Name', age: 25 }\r\n```\r\n\r\n#### toAttr\r\n\r\n> Convert JSON object to html key value format. <br>\r\n> toAttr(object)\r\n\r\n```javascript\r\nhelper.toAttr({ name: \"email\", value:\"mail@mailbox.com\" });\r\n// return string: name=\"email\" value=\"mail@mailbox.com\"\r\n```\r\n\r\n#### repeat\r\n\r\n> The method repeat the string <br>\r\n> repeat(string, count)\r\n\r\n```javascript\r\nhelper.repeat('=', 10);\r\n// return: ==========\r\n```\r\n\r\n#### nl2br\n\n> Convert \\r\\n, \\n\\r, \\r, \\n to &lt;br /&gt; <br>\r\n> nl2br(string)\n\n```javascript\nhelper.nl2br('New\\nData');\n// return: New\\n<br />Data\n```\n\n#### htmlspecialchars\n\n> PHP style htmlspecialchars <br>\r\n> htmlspecialchars(string, [options])\r\n\n```javascript\nhelper.htmlspecialchars('<a href=\"link\">label</a>', 'ENT_QUOTES');\r\n// return: &lt;a href=&quot;link&quot;&gt;label&lt;/a&gt;\n```\n\n#### strip_tags\n\n> PHP style strip_tags <br>\r\n> strip_tags(string, [allowable_tags])\r\n\n```javascript\nhelper.strip_tags('<p><a href=\"/target\">Link</a> Text</p>', '<p>');\r\n// return: <p>Link Text</p>\n```\n\n#### ucFirst\n\n> upper case the first charater <br>\r\n> ucFirst(string)\r\n\n```javascript\nhelper.ucFirst('the string ...');\n// return: The string ...\n```\n\n#### countChars\n\n> count chars <br>\r\n> countChars(RegEx, string)\r\n\n```javascript\nhelper.countChars(/a/g, 'amazone');\n// return: 2\n```\n\n[Go to contents](#overview)\n\n***\n\n### HTML\n\n#### a\n\n> Create HTML a element <br>\r\n> html.a(link_string, label_string, [options])\r\n\n```javascript\nhelper.html.a('/target', 'Link');\n// return: <a hreff=\"/target\">Link</a>\r\n\nhelper.html.a('/target', 'Link', { title: 'Link', class: 'cls' });\n// return: <a hreff=\"/target\" title=\"Link\" class=\"cls\">Link</a>\n```\n\n#### beginEl\n\n> Create only open tag with parameters <br>\r\n> html.beginEl(name_of_element, options)\r\n\n```javascript\nhelper.html.beginEl('p', { class: 'content'});\n// return: <p class=\"content\">\n```\n\n#### endEl\n\n> Create element only close tag <br>\r\n> html.endEl(name_of_element)\r\n\n```javascript\nhelper.html.endEl('p');\n// return: </p>\n```\n\n#### el\n\n> Create element with close tag <br>\r\n> html.el(name_of_element, options)\r\n\n```javascript\nhelper.html.el('p', { class: 'content', html: 'The text'});\n// return: <p class=\"content\">The text</p>\n```\n\n#### charset\n\n> Create meta element for charset <br>\r\n> html.charset(charset_string [default: 'uft8'])\r\n\n```javascript\nhelper.html.charset();\n// return: <meta charset=\"utf8\" />\r\n\nhelper.html.charset('other');\n// return: <meta charset=\"other\" />\n```\n\n#### css\n\n> Create link element for style <br>\r\n> html.css(url_string, options)\r\n\n```javascript\nhelper.html.css('style.css');\n// return: <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\" />\r\n\nhelper.html.css('style.css', { media: 'print'});\n// return: <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" media=\"print\" />\n```\n\n#### script\n\n> Create script source element <br>\r\n> html.script(source_string, options)\r\n\r\n```javascript\nhelper.html.script('app.js');\n// return: <script src=\"app.js\" type=\"text/javascript\"></script>\n```\n#### img\n\n> Create img element <br>\r\n> html.img(image_path, alt, options)\r\n\r\n```javascript\nhelper.html.img('pic.png');\n// return: <img src=\"pic.png\" />\n\nhelper.html.img('pic.png', 'Big moon');\n// return: <img src=\"pic.png\" alt=\"big moon\" />\r\n\r\nhelper.html.img('pic.png', 'Big moon', { width: 320 });\n// return: <img src=\"pic.png\" alt=\"big moon\" width=\"320\" />\n```\n\n#### imgText\n\n> Create image element with remote url text caption <br>\r\n> helper.html.imgText(message, options)\r\n\n```javascript\nhelper.html.imgText('No Image');\n// return: <img src=\"http://www.placehold.it/291x170/EFEFEF/AAAAAA&text=No Image\"  />\r\n\r\nhelper.html.imgText('No Image', { w: 320, h: 240});\n// return: <img src=\"http://www.placehold.it/320x240/EFEFEF/AAAAAA&text=No Image\"  />\n```\n\n#### refresh\n\n> Create meta element for refresh <br>\r\n> html.refresh(url, time\\_in\\_secounds\\_after\\_redirect, options)\r\n\r\n```javascript\nhelper.refresh('http://target.com');\n// return: <meta http-equiv=\"5,http://target.com\" />\n```\n\n[Go to contents](#overview)\n\n***\n\n### Date\n\n#### time\n\n> Create unix timestamp <br>\r\n> date.time([new Date Or '2013-08-28 19:45 ])\r\n\r\n```javascript\nhelper.date.time(); // retun timestamp in seconds\n// return 1377715631\n\nhelper.date.time('2013-08-28 19:45');\n// return 1377737100\n\nhelper.date.time(new Date()); \n// return 1377715631\n```\n\n#### format\n\n> PHP style date format <br>\r\n> date.format(format_string, [date\\_or\\_timestamp])\r\n\r\n```javascript\nhelper.date.format('m/d/Y H:i:s', new Date());\n// return 08/28/2013 19:45\n\nhelper.date.format('m/d/Y H:i:s', 1377737100);\n// return 08/28/2013 19:45 \n\nhelper.date.format('m/d/Y H:i:s');\n// return 08/28/2013 19:45\n```\n\n#### parse\n\n> PHP style date parse <br>\r\n> date.format(date_string) <br>\r\n> return object: { year, month, day, hour, minute, second, fraction, is\\_localtime }\n\n[php date format options](http://php.net/manual/en/function.date.php)\n\n[Go to contents](#overview)\n\n***\n\n### Form\n\n#### begin\n\n> Create &lt;form&gt; element <br>\r\n> form.begin(target\\_url, options) <br>\r\n\r\n```javascript\nhelper.form.begin();\n// return: <form action=\"\" method=\"POST\">\r\n\r\nhelper.form.begin(null, { method: 'GET' })\n// return: <form action=\"\" method=\"GET\">\r\n\nhelper.form.begin('/target', { upload: true, class: 'form' });\n// return: <form action=\"/target\" class=\"form\" method=\"POST\" enctype=\"multipart/form-data\">\n```\n\n> form begin options <br>\r\n> method: form method, default: POST <br>\r\n> upload: set true for file upload, default: false <br>\r\n> htmlElementName: use object key for other html attribute. id, class <br>\r\n\r\n#### end\n\n> Crate &lt;/form&gt; element <br>\r\n> form.end()\r\n\n#### label\n\n> Create &lt;label&gt; element <br>\r\n> form.label(shown\\_label, html\\_options) <br>\r\n\r\n```javascript\nhelper.form.label('Username');\n// return <label>Username</label>\n\nhelper.form.label('Username', { for: 'username' });\n// return <label for=\"username\">Username</label>\n```\n\n#### inputField \n\n> Create input field <br>\r\n> form.inputField(html\\_options) <br>\r\n> default type text\r\n\r\n#### hiddenField\n\n> Create hidden input field <br>\r\n> form.hiddenField(name, value, html\\_options)\r\n\r\n#### textField\n\n> Create text type input field. <br>\r\n> form.textField(name, value, html\\_options)\r\n\r\n```javascript\nhelper.form.textField('username', null, { palceholder: 'Username', class: 'input' });\n```\n\n#### passwordField\n\n> Create password type input field <br>\r\n> form.passwordField(name, value, html\\_options)\r\n\r\n#### fileField\r\n\r\n> Create field for file upload <br>\r\n> form.fileField(name, html\\_options)\r\n\r\n#### textArea\n\n> Create textarea <br>\r\n> form.textArea(name, value, html\\_options)\r\n\r\n#### dropDownList\r\n\r\n> Create select element <br>\r\n> form.dropDownList(name, value, array\\_json, html\\_options)\r\n\r\n```javascript\r\nvar list = [\"Label 1\", \"Label 2\", \"Label 3\"]; // index value\r\nhelper.form.dropDownList('name', null, list);\r\nhelper.form.dropDownList('name', 1, list); // selected 2nd\r\n\r\n// with empty chooser\r\nhelper.form.dropDownList('name', null, list, { empty: '-- Select --'});\r\n\r\n// drop down from JSON\r\nvar list = { \"val1\": \"Label 1\", \"val2\": \"Label 2\", \"val3\": \"Label 3\" };\r\nhelper.form.dropDownList('name', 'val2', list);\r\n\r\n// JSON based Array\r\nvar list = [\r\n\t{ \"id\": 1, \"name\": \"Label 1\" },\r\n\t{ \"id\": 2, \"name\": \"Label 2\" },\r\n    { \"id\": 3, \"name\": \"Label 3\" }\r\n];\r\n\r\nhelper.form.dropDownList('name', 2, list, { value: \"id\", label: \"name\"});\r\n\r\n```\r\n\r\n> html_options <br>\r\n> value: select value from Object <br>\r\n> label: select label from Object <br>\r\n> empty: empty label <br>\r\n\r\n#### checkBox\n\n> Create checkbox type input field <br>\r\n> form.checkBox(name, checked, html\\_options)\r\n\r\n#### radioButton\n\n> Create radio button <br>\r\n> form.radioButton(name, value, html\\_options)\r\n\r\n#### radioButtonList\n\n> Create radio button list <br>\r\n> form.radioButtonList(name, value, list, html\\_options)\r\n\r\n```javascript\nvar list = {\n\t'value1': 'Label 1',\n\t'value2': 'Label 2',\n\t'value3': 'Label 3'\n};\n\nhelper.form.radioButtonList('name', null, list );\n\nhelper.form.radioButtonList('name', 'value2', list ); // selected value2\n\n// custom template\nhelper.form.radioButtonList('name', 'value2', list, { template: '{input}<br>{label}' } ); // selected value2\n\n```\n\n#### button\n\n> Create button element <br>\r\n> form.button(label, html\\_options)\r\n\r\n#### resetButton\n\n> Create reset type input <br>\r\n> form.resetButton(label, html\\_options)\r\n\r\n#### submitButton\n\n> Create submit type input <br>\r\n> form.submitButton(label, html\\_options)\r\n\n\n\n[Go to contents](#overview)\n\n***\n\n### ActiveForm\n\n[Go to contents](#overview)\n\n***\n\n### Widgets\n\n#### pagination\n\n> Generate client side pagination <br>\r\n> widgets.pagination(options)\r\n\r\n```javascript\nhelper.widgets.pagination({ page: 1, pages: 10});\n// generate: ul -> li -> a elements\r\n// ...\r\n// <li><a href=\"?page=[page number]\">[page number]</a></li>\r\n// ...\n\n// options page and pages with limit\nhelper.widgets.pagination({ page: 1, pages: 10, limit: 5 });\n// from count\nhelper.widgets.pagination({ page: 1, count: 105, limit: 10 });\n// custom url\nhelper.widgets.pagination({ page: 1, pages: 10, url: '/site'});\n// /site?page=[num]\nhelper.widgets.pagination({ page: 1, pages: 10, url: '/site?name=data'});\n// /site?name=date&page=[num]\nhelper.widgets.pagination({ page: 1, pages: 10, url: '/site', query: 'p'});\n// /stie?p=[num]\n\n// with custom range\nhelper.widgets.pagination({ page: 1, pages: 10, range: 10 });\n```\n\n> pagination options <br>\r\n> page: current page, default: 1 <br>\r\n> pages: number of pages <br>\r\n> limit: number of pages per side, default: 10 <br>\r\n> count: number of elements <br>\r\n> range: number of shown links, default: 6 <br>\r\n> url: site url and query elements <br>\r\n> query: page query variable name, default: page <br>\r\n> active: active link class, default: active <br>\r\n> class: ul element class, default: empty <br>\r\n\r\n#### nestedList\n\n> Create &lt;ul&gt;,&lt;li&gt; based hierarchical list. <br>\r\n> widgets.nestedList(List, callback, params) <br>\r\n\r\n```javascript\nvar list = [{ \n\t\"id\": 1, \n\t\"name\": \"Main Category\", \n\t\"children\": [ \n\t\t{ \"id\": 2, \"name\": \"Sub Category 1\" }, \n\t\t{ \"id\": 2, \"name\": \"Sub Category 1\"\t} \n\t] \n}];\n\nhelper.widgets.nestedList(list, function (fn, el, lvl) { return el.name; })\n\n```\n\n> callback(helperFunctions, element, level) <br>\r\n> nestedList options <br>\r\n> ulClass: ul element class, recursive <br>\r\n> liClass: li element class, recursive <br>\n\n#### shippingChooser\n\n> Create drop down date list for deliver <br>\r\n> widgets.shippingChooser(name\\_of\\_select, options) <br>\r\n\r\n```javascript\nhelper.widgets.shippingChooser('deliver');\n// generate drop down list\n\nhelper.widgets.shippingChooser('deliver', { date: new Date('2013-08-28') } );\n// generate drop down list from 08/28/2013\n```\n\n> shipping chooser options <br>\r\n> date: instance of Date, from calulate. Default: Now <br>\r\n> lang: language, values: en, hu, default: en <br>\r\n> sunDay: shown list sun day, default: false <br>\r\n\n\n[Go to contents](#overview)\n\n***\n\n## Changelog\n\n### Aug 28, 2013 - version: 0.1.3\n\n* added form.radioButtonList\r\n* fixed form.checkBox\r\n* added form tests\r\n* updated README.md API description\n\n### Aug 27, 2013 - version: 0.1.2\n\n* fix console.log\n* enhacement activeForm dropDownList\n\n### Aug 22, 2013 - version: 0.1.1\n* fixed widgets test issue\n\n### Aug 22, 2013 - version: 0.1.0\n\n* added defaults\n* added date plugin\n* added html plugin\n* added form plugin\n* added active form plugin\n* added widgets\n* added tests\n\n## Missing, Todo\n\n* API documentation\n* activeForm tests\n* more template engine example\n* examples\n\n[Go to contents](#overview)\n\n***\n\n## Authors and contributors\n\n* Janos Meszaros: [https://github.com/janez89](https://github.com/janez89)\n* For PHP style functions (number_format, date, strip_tags, htmlspeicalchars, nl2br) [http://phpjs.org/functions](http://phpjs.org/functions)\n\n[Go to contents](#overview)\n\n***\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Janez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[Go to contents](#overview)\n\n***\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/janez89/native-view-helpers/issues"
  },
  "_id": "native-view-helpers@0.1.3",
  "dist": {
    "shasum": "b2f865dadb8d6b4a0902dfe8890c4ebb328d8473"
  },
  "_from": "native-view-helpers@",
  "_resolved": "https://registry.npmjs.org/native-view-helpers/-/native-view-helpers-0.1.3.tgz"
}
